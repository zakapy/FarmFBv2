const accountService = require('../services/accountService');
const { checkFacebookCookies } = require('../utils/facebook');

exports.list = async (req, res) => {
  const data = await accountService.list(req.user.id);
  res.json(data);
};

exports.create = async (req, res) => {
  const isValid = await checkFacebookCookies(req.body.cookies);
  if (!isValid) {
    return res.status(400).json({ error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫—É–∫–∏ –∏–ª–∏ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Facebook' });
  }

  const newAccount = await accountService.create(req.user.id, req.body);
  res.status(201).json(newAccount);
};

exports.update = async (req, res) => {
  if (req.body.cookies) {
    const isValid = await checkFacebookCookies(req.body.cookies);
    if (!isValid) {
      return res.status(400).json({ error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫—É–∫–∏ –∏–ª–∏ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Facebook' });
    }
  }

  const updated = await accountService.update(req.user.id, req.params.id, req.body);
  res.json(updated);
};

exports.remove = async (req, res) => {
  await accountService.remove(req.user.id, req.params.id);
  res.status(204).send();
};

// ‚úÖ –ï–î–ò–ù–°–¢–í–ï–ù–ù–ê–Ø checkStatus —Ñ—É–Ω–∫—Ü–∏—è
exports.checkStatus = async (req, res) => {
  const { id } = req.params;

  console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞: ${id}`);

  const account = await accountService.getOne(req.user.id, id);
  if (!account) {
    console.log(`‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${id}`);
    return res.status(404).json({ error: '–ê–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });
  }

  if (!account.cookies || !Array.isArray(account.cookies) || account.cookies.length === 0) {
    console.log(`‚ö†Ô∏è –£ –∞–∫–∫–∞—É–Ω—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—É–∫–∏: ${id}`);
    return res.status(400).json({ error: '–£ –∞–∫–∫–∞—É–Ω—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—É–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏' });
  }

  const isValid = await checkFacebookCookies(account.cookies);
  const status = isValid ? '–∞–∫—Ç–∏–≤–µ–Ω' : '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω';

  console.log(`‚úÖ –°—Ç–∞—Ç—É—Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω: ${status}`);

  const updated = await accountService.update(req.user.id, id, { status });

  if (!updated) {
    console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç: ${id}`);
    return res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å' });
  }

  res.json({ success: true, status });
};
