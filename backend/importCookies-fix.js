  async importCookies(cookies, profileId) { try { logger.info(Импортируем cookies для профиля Dolphin: ); let cookiesArray = cookies; if (typeof cookies === 'string') { try { cookiesArray = JSON.parse(cookies); } catch (e) { logger.error(Неверный формат cookies: ); throw new Error('Неверный формат cookies'); } } if (!Array.isArray(cookiesArray)) { logger.error('Cookies должны быть массивом'); throw new Error('Cookies должны быть массивом'); } // Используем URL локального API const localApiUrl = this.localApiUrl || 'http://localhost:3001'; const url = ${localApiUrl}/v1.0/cookies/import; // Преобразуем profileId в число const numericProfileId = Number(profileId); if (isNaN(numericProfileId)) { throw new Error(Неверный формат profileId: ); } const payload = { cookies: cookiesArray, profileId: numericProfileId, transfer: 0, cloudSyncDisabled: false }; const headers = { 'Content-Type': 'application/json' }; logger.info(Отправляем запрос на импорт cookies: ); logger.info(Payload: profileId=, cookies:  шт.); const response = await axios.post(url, payload, { headers }); logger.info(Успешно импортированы cookies для профиля ); return { success: true, message: 'Cookies успешно импортированы' }; } catch (error) { logger.error(Не удалось импортировать cookies: ); if (error.response) { logger.error(Статус: ); logger.error(Данные: ); } return { success: false, message: 'Cookies не были импортированы', error: error.message }; } }