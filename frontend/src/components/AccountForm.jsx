import React, { useState, useEffect } from 'react';
import Input from './Input';
import Button from './Button';
import Modal from './Modal';

const AccountForm = ({ initialData, onClose, onSubmit }) => {
  const [form, setForm] = useState({
    name: '',
    cookies: '',
    proxy: '',
  });

  const [error, setError] = useState(null);

  useEffect(() => {
    if (initialData) {
      setForm({
        name: initialData.name || '',
        cookies: Array.isArray(initialData.cookies)
          ? JSON.stringify(initialData.cookies, null, 2)
          : initialData.cookies || '',
        proxy: typeof initialData.proxy === 'string'
          ? initialData.proxy
          : initialData.proxy?.name || '',
      });
    }
  }, [initialData]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setForm((prevForm) => ({ ...prevForm, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError(null);

    if (!form.name.trim() || !form.cookies.trim()) {
      setError('–ù–∞–∑–≤–∞–Ω–∏–µ –∏ –∫—É–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã');
      return;
    }

    let parsedCookies;
    try {
      parsedCookies = JSON.parse(form.cookies);
      if (!Array.isArray(parsedCookies)) throw new Error();
    } catch {
      setError('–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç cookies ‚Äî –Ω—É–∂–µ–Ω JSON-–º–∞—Å—Å–∏–≤!');
      return;
    }

    try {
      await onSubmit({
        ...form,
        cookies: parsedCookies,
        proxy: form.proxy.trim(),
      });
    } catch (err) {
      setError(err.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞');
    }
  };

  return (
    <Modal
      title={initialData ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç' : '–ù–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç'}
      isOpen={true}
      onClose={onClose}
    >
      <form
        onSubmit={handleSubmit}
        style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}
      >
        <Input
          name="name"
          placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞"
          value={form.name}
          onChange={handleChange}
        />

        {/* üß± –ë–û–õ–¨–®–û–ï –ú–ù–û–ì–û–°–¢–†–û–ß–ù–û–ï –ü–û–õ–ï */}
        <textarea
          name="cookies"
          placeholder="–í—Å—Ç–∞–≤—å—Ç–µ –∫—É–∫–∏ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON)"
          value={form.cookies}
          onChange={handleChange}
          rows={6}
          style={{
            padding: '0.5rem',
            borderRadius: '5px',
            border: '1px solid #ccc',
            resize: 'vertical',
            fontFamily: 'monospace',
            whiteSpace: 'pre-wrap',
          }}
        />

        <Input
          name="proxy"
          placeholder="–ü—Ä–æ–∫—Å–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
          value={form.proxy}
          onChange={handleChange}
        />

        {error && (
          <div style={{ color: 'red', fontSize: '14px' }}>
            ‚ö†Ô∏è {error}
          </div>
        )}
        <Button type="submit">{initialData ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å'}</Button>
      </form>
    </Modal>
  );
};

export default AccountForm;
